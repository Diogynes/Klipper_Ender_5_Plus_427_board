#[include fluidd.cfg]
#[include mainsail.cfg]

[virtual_sdcard]
#path: ~/gcode_files
path: ~/printer_data/gcodes

[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^PA5
position_endstop: 360
position_min: 0
position_max: 360
homing_speed: 50
homing_retract_dist: 5

[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^PA6
position_endstop: 360
position_min: 0
position_max: 360
homing_speed: 50
homing_retract_dist: 5

[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
rotation_distance: 4
microsteps: 16
full_steps_per_rotation: 200
#endstop_pin: ^PA7
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 410

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
rotation_distance: 34.400
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 100.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1000.0
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
min_extrude_temp: 190
min_temp: 5
max_temp: 275

[bltouch]
sensor_pin: ^PB1
#sensor_pin: ^PA7
control_pin: PB0
stow_on_each_sample: True
probe_with_touch_mode: False
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
x_offset: -44
y_offset: -7
#z_offset: 0
speed: 4.0
samples: 2
sample_retract_dist: 5.0

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 5
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1500
max_z_velocity: 10
max_z_accel: 100

[safe_z_home]
home_xy_position: 221,188
speed: 80.0
z_hop: 10.0
z_hop_speed: 5.0

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 50,50
mesh_max: 300, 300
probe_count: 5,5 
fade_start: 1
fade_end: 10

[filament_switch_sensor e0_sensor]
switch_pin: PA4
pause_on_runout: False
runout_gcode:
  PAUSE_PARK

[pause_resume]

[respond]
default_type: echo

[display_status]

[pause_resume]

# t5uid1 section is required for Ender 5 Plus display
#[t5uid1]
#firmware: dgus_reloaded
#machine_name: Ender 5 Plus
#volume: 60
#brightness: 50
#z_min: 0
#z_max: 410

[gcode_arcs] 
resolution: 1.0

[bed_screws]
screw1: 40,50
screw2: 300,50
screw3: 300,315
screw4: 40,315


[screws_tilt_adjust]
screw1: 40,50
screw1_name: front left screw
screw2: 340,50
screw2_name: front right screw
screw3: 340,315
screw3_name: rear right screw
screw4: 40,315
screw4_name: rear left screw
horizontal_move_z: 10
speed: 30
screw_thread: CW-M3


# **********************************
# ************* MACROS *************
# **********************************

[gcode_macro G29]
gcode:
    G1 Z10 F600
    BED_MESH_CLEAR
	  BED_MESH_CALIBRATE
	  BED_MESH_OUTPUT
    BED_MESH_PROFILE SAVE=bedmesh
    G0 X0 Y0 Z10 F6000
    G28
    BED_MESH_PROFILE save=default

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 

[gcode_macro RESUME]
description: Resume the print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the currently running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE=0 ;Red
    # Start bed heating
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    G28 ; Home all axes
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X10.1 Y20 Z30 F5000.0 ; Move to start position
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    G92 E0 ; Reset Extruder
    G1 Z0.2 ; Start close to bed
    G1 X10.1 Y200.0 Z0.2 F1500.0 E15 ; Draw the first line
    G1 X10.4 Y200.0 Z0.2 F5000.0 ; Move to side a little
    G1 X10.4 Y20 Z0.2 F1500.0 E30 ; Draw the second line
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X13 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
    # SET_LED LED=my_neopixel RED=0.9 GREEN=0.9 BLUE=0.9 ;90% White

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91 ; rel pos
    G1 E-3 Z1 X-2 Y-2 F300
    #G1 X-2 Y-2 F300
    # Raise nozzle by 10mm
    G1 Z9 F3000
    # SET_PIN PIN=beeper VALUE=1
    # SET_PIN PIN=beeper VALUE=0
    G90 ; absolute pos
    G1 X335 Y335 F3000 ;clear head and bring bed to the front
    # Disable steppers
    M84
    # SET_LED LED=my_neopixel RED=0 GREEN=1 BLUE=0 ;Green

[gcode_macro PA_CAL]
# Pressure Advance Simple Test macro, using .4mm nozzle.
# Usage: PA_CAL BED=100 EXTRUDER=240
# First prints a line with current set PA, then prints 20 line segments
# starting with 0 PA, increasing each line by 0.005.
    
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    # SET_LED LED=my_neopixel RED=1 GREEN=0 BLUE=0 ;Red
    # Start bed heating
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    START_PRINT 
    
    G21 ; Millimeter units
    G90 ; Absolute XYZ
    M83 ; Relative E
    SET_VELOCITY_LIMIT ACCEL=3000 ACCEL_TO_DECEL=1500
    G92 E0                        ; set etruder to zero position
    M106 S0                       ; fan off
    
    G1 X120 Y70 F3000            ; move to start position
    G1 Z0.25 F300                 ; move to layer height
    G1 E0.75 F1800                ; un-retract
    G1 X140 Y70 E0.91798 F300     ; print line part one
    G1 X180 Y70 E1.83596 F9000    ; print line part two
    G1 X200 Y70 E0.91798 F300     ; print line part three
    G1 E-0.75 F1800               ; retract
    G1 Z1 F300                    ; Move above layer height  
    
    {% for i in range(0, 20) %}
      SET_PRESSURE_ADVANCE ADVANCE={i*0.005} ; set Pressure Advance
      M117 Testing Pressure Advance at: {i*0.005}
      G1 X120 Y{100+(5*i)} F3000            ; move to start position
      G1 Z0.25 F300                          ; move to layer height
      G1 E0.75 F1800                         ; un-retract
      G1 X140 Y{100+(5*i)} E0.91798 F300     ; print line part one
      G1 X180 Y{100+(5*i)} E1.83596 F9000    ; print line part two
      G1 X200 Y{100+(5*i)} E0.91798 F300     ; print line part three
      G1 E-0.75 F1800                        ; retract
      G1 Z1 F300                             ; Move above layer height  
    {% endfor %}
    
    END_PRINT






# https://github.com/Desuuuu/klipper-macros
# If you want to use these macros, follow the instructions from the repository
# and uncomment the following lines.

#[save_variables]
#filename: ~/variables.cfg
#
#[delayed_gcode macros_initialize]
#initial_duration: 1
#gcode:
#  INITIALIZE_VARIABLE VARIABLE=park_x VALUE=20
#  INITIALIZE_VARIABLE VARIABLE=park_y VALUE=340
#  INITIALIZE_VARIABLE VARIABLE=bowden_len VALUE=570
#
#[include macros/*.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.019375, 0.053125, 0.035000, 0.040625, 0.010625
#*# 	  0.028125, 0.043750, 0.025625, 0.035000, 0.001875
#*# 	  0.008125, 0.028750, 0.004375, 0.013125, -0.016875
#*# 	  0.019375, 0.044375, 0.028125, 0.038750, 0.001875
#*# 	  0.049375, 0.088125, 0.086250, 0.090625, 0.030625
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 300.0
#*# mesh_x_pps = 2
#*# max_x = 300.0
#*#
#*# [bltouch]
#*# z_offset = 4.719
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.914
#*# pid_ki = 1.420
#*# pid_kd = 109.312
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 65.934
#*# pid_ki = 0.628
#*# pid_kd = 1730.757
